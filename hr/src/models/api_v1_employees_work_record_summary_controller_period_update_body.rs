/*
 * freee人事労務 API
 *
 * freee人事労務のAPI仕様です。  ## 認証について  OAuth2.0を利用します。詳細は[ドキュメントの認証](https://developer.freee.co.jp/docs)パートを参照してください。  ## エンドポイント  https://api.freee.co.jp/hr  ## 後方互換性ありの変更  freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。  - 新しいAPIリソース・エンドポイントの追加 - 既存のAPIに対して必須ではない新しいリクエストパラメータの追加 - 既存のAPIレスポンスに対する新しいプロパティの追加 - 既存のAPIレスポンスに対するプロパティの順番の入れ変え - keyとなっているidやcodeの長さの変更（長くする）  ## エラーレスポンス  APIリクエストでエラーが発生した場合は、エラー原因に応じたステータスコードおよびメッセージを返します。  |ステータスコード|原因| |---|---| |400|リクエストパラメータが不正| |401|アクセストークンが無効| |403|アクセス権限がない| |404|リソースが存在しない| |429|リクエスト回数制限を越えた| |503|システム内で予期しないエラーが発生|  メッセージボディ内の `messages` にはエラー内容を説明する文字列が入ります。  ``` {     \"status_code\": 400,     \"errors\": [         {             \"type\": \"bad_request\",             \"messages\": [                 \"リクエストの形式が不正です。\"             ]         }     ] } ```  ## API使用制限  APIリクエストは1時間で5000回を上限としています。API使用ステータスはレスポンスヘッダに付与されます。  ``` X-Ratelimit-Limit:5000 X-Ratelimit-Remaining:4998 X-Ratelimit-Reset:2018-01-01T12:00:00.000000Z ```  各ヘッダの意味は次のとおりです。  |ヘッダ名|説明| |---|---| |X-Ratelimit-Limit|使用回数の上限| |X-Ratelimit-Remaining|残り使用回数| |X-Ratelimit-Reset|使用回数がリセットされる時刻|  上記に加え、freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。 その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。  
 *
 * The version of the OpenAPI document: v2022-02-01
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ApiV1EmployeesWorkRecordSummaryControllerPeriodUpdateBody {
    /// 事業所ID（必須）
    #[serde(rename = "company_id")]
    pub company_id: i32,
    /// 総勤務日数
    #[serde(rename = "work_days", skip_serializing_if = "Option::is_none")]
    pub work_days: Option<f32>,
    /// 所定労働日の勤務日数
    #[serde(rename = "work_days_on_weekdays", skip_serializing_if = "Option::is_none")]
    pub work_days_on_weekdays: Option<f32>,
    /// 所定休日の勤務日数
    #[serde(rename = "work_days_on_prescribed_holidays", skip_serializing_if = "Option::is_none")]
    pub work_days_on_prescribed_holidays: Option<f32>,
    /// 法定休日の勤務日数
    #[serde(rename = "work_days_on_legal_holidays", skip_serializing_if = "Option::is_none")]
    pub work_days_on_legal_holidays: Option<f32>,
    /// 労働時間（分）
    #[serde(rename = "total_work_mins", skip_serializing_if = "Option::is_none")]
    pub total_work_mins: Option<i32>,
    /// 所定労働時間（分）
    #[serde(rename = "total_normal_work_mins", skip_serializing_if = "Option::is_none")]
    pub total_normal_work_mins: Option<i32>,
    /// 給与計算に用いられる法定内残業時間（分）
    #[serde(rename = "total_excess_statutory_work_mins", skip_serializing_if = "Option::is_none")]
    pub total_excess_statutory_work_mins: Option<i32>,
    /// 法定休日労働時間（分）
    #[serde(rename = "total_holiday_work_mins", skip_serializing_if = "Option::is_none")]
    pub total_holiday_work_mins: Option<i32>,
    /// 深夜労働時間（分）
    #[serde(rename = "total_latenight_work_mins", skip_serializing_if = "Option::is_none")]
    pub total_latenight_work_mins: Option<i32>,
    /// 実労働時間ベースの法定内残業時間（分）
    #[serde(rename = "total_actual_excess_statutory_work_mins", skip_serializing_if = "Option::is_none")]
    pub total_actual_excess_statutory_work_mins: Option<i32>,
    /// 時間外労働時間（分）
    #[serde(rename = "total_overtime_work_mins", skip_serializing_if = "Option::is_none")]
    pub total_overtime_work_mins: Option<i32>,
    /// 欠勤日数
    #[serde(rename = "num_absences", skip_serializing_if = "Option::is_none")]
    pub num_absences: Option<f32>,
    /// 控除対象の欠勤日数
    #[serde(rename = "num_absences_for_deduction", skip_serializing_if = "Option::is_none")]
    pub num_absences_for_deduction: Option<f32>,
    /// 遅刻時間（分）
    #[serde(rename = "total_lateness_mins", skip_serializing_if = "Option::is_none")]
    pub total_lateness_mins: Option<i32>,
    /// 控除対象の遅刻時間（分）
    #[serde(rename = "total_lateness_mins_for_deduction", skip_serializing_if = "Option::is_none")]
    pub total_lateness_mins_for_deduction: Option<i32>,
    /// 早退時間（分）
    #[serde(rename = "total_early_leaving_mins", skip_serializing_if = "Option::is_none")]
    pub total_early_leaving_mins: Option<i32>,
    /// 控除対象の早退時間（分）
    #[serde(rename = "total_early_leaving_mins_for_deduction", skip_serializing_if = "Option::is_none")]
    pub total_early_leaving_mins_for_deduction: Option<i32>,
    /// 有給取得日数
    #[serde(rename = "num_paid_holidays", skip_serializing_if = "Option::is_none")]
    pub num_paid_holidays: Option<f32>,
    /// 不足時間（分）（フレックスタイム制でのみ使用）
    #[serde(rename = "total_shortage_work_mins", skip_serializing_if = "Option::is_none")]
    pub total_shortage_work_mins: Option<i32>,
    /// 支給対象の法定内残業時間（分）（裁量労働制でのみ使用）
    #[serde(rename = "total_deemed_paid_excess_statutory_work_mins", skip_serializing_if = "Option::is_none")]
    pub total_deemed_paid_excess_statutory_work_mins: Option<i32>,
    /// 支給対象の法定内残業時間（分）（裁量労働制でのみ使用）
    #[serde(rename = "total_deemed_paid_overtime_except_normal_work_mins", skip_serializing_if = "Option::is_none")]
    pub total_deemed_paid_overtime_except_normal_work_mins: Option<i32>,
}

impl ApiV1EmployeesWorkRecordSummaryControllerPeriodUpdateBody {
    pub fn new(company_id: i32) -> ApiV1EmployeesWorkRecordSummaryControllerPeriodUpdateBody {
        ApiV1EmployeesWorkRecordSummaryControllerPeriodUpdateBody {
            company_id,
            work_days: None,
            work_days_on_weekdays: None,
            work_days_on_prescribed_holidays: None,
            work_days_on_legal_holidays: None,
            total_work_mins: None,
            total_normal_work_mins: None,
            total_excess_statutory_work_mins: None,
            total_holiday_work_mins: None,
            total_latenight_work_mins: None,
            total_actual_excess_statutory_work_mins: None,
            total_overtime_work_mins: None,
            num_absences: None,
            num_absences_for_deduction: None,
            total_lateness_mins: None,
            total_lateness_mins_for_deduction: None,
            total_early_leaving_mins: None,
            total_early_leaving_mins_for_deduction: None,
            num_paid_holidays: None,
            total_shortage_work_mins: None,
            total_deemed_paid_excess_statutory_work_mins: None,
            total_deemed_paid_overtime_except_normal_work_mins: None,
        }
    }
}


