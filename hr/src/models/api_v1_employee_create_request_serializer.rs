/*
 * freee人事労務 API
 *
 * freee人事労務のAPI仕様です。  ## [重要] freee人事労務 APIの新バージョンについて  このリファレンスはfreee人事労務 APIの新バージョンのリファレンスです。  2022年7月まで[旧バージョン](https://developer.freee.co.jp/docs/hr/pre-reference)と合わせて2つのバージョンが利用できる状態です。  新しいAPIを利用するにはリクエストヘッダーに以下を指定します。  ``` FREEE-VERSION: 2022-02-01 ```  指定がない場合には2022年7月に廃止予定のAPIを利用することになります。  詳細な変更やスケジュールは[【重要】freee人事労務APIの仕様変更について](https://developer.freee.co.jp/news/5418)をご覧ください。  ## 認証について  OAuth2.0を利用します。詳細は[ドキュメントの認証](https://developer.freee.co.jp/docs)パートを参照してください。  ## エンドポイント  https://api.freee.co.jp/hr  ## 後方互換性ありの変更  freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。  - 新しいAPIリソース・エンドポイントの追加 - 既存のAPIに対して必須ではない新しいリクエストパラメータの追加 - 既存のAPIレスポンスに対する新しいプロパティの追加 - 既存のAPIレスポンスに対するプロパティの順番の入れ変え - keyとなっているidやcodeの長さの変更（長くする）  ## エラーレスポンス  APIリクエストでエラーが発生した場合は、エラー原因に応じたステータスコードおよびメッセージを返します。  |ステータスコード|原因| |---|---| |400|リクエストパラメータが不正| |401|アクセストークンが無効| |403|アクセス権限がない| |404|リソースが存在しない| |429|リクエスト回数制限を越えた| |503|システム内で予期しないエラーが発生|  メッセージボディ内の `messages` にはエラー内容を説明する文字列が入ります。  ``` {     \"status_code\": 400,     \"errors\": [         {             \"type\": \"bad_request\",             \"messages\": [                 \"リクエストの形式が不正です。\"             ]         }     ] } ```  ## API使用制限  APIリクエストは1時間で5000回を上限としています。API使用ステータスはレスポンスヘッダに付与されます。  ``` X-Ratelimit-Limit:5000 X-Ratelimit-Remaining:4998 X-Ratelimit-Reset:2018-01-01T12:00:00.000000Z ```  各ヘッダの意味は次のとおりです。  |ヘッダ名|説明| |---|---| |X-Ratelimit-Limit|使用回数の上限| |X-Ratelimit-Remaining|残り使用回数| |X-Ratelimit-Reset|使用回数がリセットされる時刻|  上記に加え、freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。 その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。  
 *
 * The version of the OpenAPI document: v2022-02-01
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ApiV1EmployeeCreateRequestSerializer {
    /// 従業員番号<br> 従業員を判別しやすいよう管理することができます。（例: 1人目の正社員を A-001 と入力）
    #[serde(rename = "num", skip_serializing_if = "Option::is_none")]
    pub num: Option<String>,
    /// <a href=\"https://support.freee.co.jp/hc/ja/articles/360000562403-労働時間制度と勤務-賃金設定について\" target=\"_blank\">勤務・賃金設定名</a> で設定した名称を指定してください。 - 未指定の際は、最初に登録したデータが利用されます。 - 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。
    #[serde(rename = "working_hours_system_name", skip_serializing_if = "Option::is_none")]
    pub working_hours_system_name: Option<String>,
    /// <a href=\"https://support.freee.co.jp/hc/ja/articles/360000666303-締め日支払い日を変更する方法は-\" target=\"_blank\">締め日支払い日グループ名</a> で設定した締め日支払い日を指定してください。 - 未指定の際は、最初に登録したデータが利用されます。 - 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。
    #[serde(rename = "company_reference_date_rule_name", skip_serializing_if = "Option::is_none")]
    pub company_reference_date_rule_name: Option<String>,
    /// 姓（必須）
    #[serde(rename = "last_name")]
    pub last_name: String,
    /// 名（必須）
    #[serde(rename = "first_name")]
    pub first_name: String,
    /// 姓カナ（必須）
    #[serde(rename = "last_name_kana")]
    pub last_name_kana: String,
    /// 名カナ（必須）
    #[serde(rename = "first_name_kana")]
    pub first_name_kana: String,
    /// 生年月日（必須）
    #[serde(rename = "birth_date")]
    pub birth_date: String,
    /// 入社日（必須）
    #[serde(rename = "entry_date")]
    pub entry_date: String,
    /// 給与方式 monthly: 月給, daily: 日給, hourly: 時給 - フレックスタイム制を使用している場合はmonthly以外指定できません。 - 入力パラメータのno_payroll_calculationがfalseの場合は必須になります。 - 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。
    #[serde(rename = "pay_calc_type", skip_serializing_if = "Option::is_none")]
    pub pay_calc_type: Option<PayCalcType>,
    /// 基本給 - 入力パラメータのno_payroll_calculationがfalseの場合は必須になります。 - 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。
    #[serde(rename = "pay_amount", skip_serializing_if = "Option::is_none")]
    pub pay_amount: Option<i32>,
    /// 性別　unselected: 未選択, male: 男性, female: 女性（デフォルト: unselected: 未選択）
    #[serde(rename = "gender", skip_serializing_if = "Option::is_none")]
    pub gender: Option<Gender>,
    /// 配偶者の有無（デフォルト: false）
    #[serde(rename = "married", skip_serializing_if = "Option::is_none")]
    pub married: Option<bool>,
    /// 給与計算対象外の従業員情報を作成する場合はtrueを指定します
    #[serde(rename = "no_payroll_calculation", skip_serializing_if = "Option::is_none")]
    pub no_payroll_calculation: Option<bool>,
}

impl ApiV1EmployeeCreateRequestSerializer {
    pub fn new(last_name: String, first_name: String, last_name_kana: String, first_name_kana: String, birth_date: String, entry_date: String) -> ApiV1EmployeeCreateRequestSerializer {
        ApiV1EmployeeCreateRequestSerializer {
            num: None,
            working_hours_system_name: None,
            company_reference_date_rule_name: None,
            last_name,
            first_name,
            last_name_kana,
            first_name_kana,
            birth_date,
            entry_date,
            pay_calc_type: None,
            pay_amount: None,
            gender: None,
            married: None,
            no_payroll_calculation: None,
        }
    }
}

/// 給与方式 monthly: 月給, daily: 日給, hourly: 時給 - フレックスタイム制を使用している場合はmonthly以外指定できません。 - 入力パラメータのno_payroll_calculationがfalseの場合は必須になります。 - 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PayCalcType {
    #[serde(rename = "monthly")]
    Monthly,
    #[serde(rename = "daily")]
    Daily,
    #[serde(rename = "hourly")]
    Hourly,
}

impl Default for PayCalcType {
    fn default() -> PayCalcType {
        Self::Monthly
    }
}
/// 性別　unselected: 未選択, male: 男性, female: 女性（デフォルト: unselected: 未選択）
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Gender {
    #[serde(rename = "unselected")]
    Unselected,
    #[serde(rename = "male")]
    Male,
    #[serde(rename = "female")]
    Female,
}

impl Default for Gender {
    fn default() -> Gender {
        Self::Unselected
    }
}

