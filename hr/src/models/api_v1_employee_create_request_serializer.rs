/*
 * freee人事労務 API
 *
 *  <p>freee人事労務のAPI仕様です。</p>  <hr />  <h2 id=\"start_guide\">スタートガイド</h2>  <p>freee API開発がはじめての方は<a href=\"https://developer.freee.co.jp/getting-started\">freee API スタートガイド</a>を参照してください。</p>  <hr /> <h2 id=\"specification\">仕様</h2>  <h3 id=\"api_endpoint\">APIエンドポイント</h3>  <p>https://api.freee.co.jp/hr</p>  <h3 id=\"about_authorize\">認証について</h3>  <p>OAuth2.0を利用します。<a href=\"https://developer.freee.co.jp/reference/#%e8%aa%8d%e8%a8%bc\" target=\"_blank\">詳細はリファレンスの認証に関する記載を参照してください。</a></p>  <h3 id=\"data_format\">データフォーマット</h3>  <p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>  <h3 id=\"compatibility\">後方互換性ありの変更</h3>  <p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>  <ul> <li>新しいAPIリソース・エンドポイントの追加</li> <li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li> <li>既存のAPIレスポンスに対する新しいプロパティの追加</li> <li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li> <li>keyとなっているidやcodeの長さの変更（長くする）</li> </ul>  <h3 id=\"common_response_header\">共通レスポンスヘッダー</h3>  <p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>  <ul> <li> <p>X-Request-Id</p> <ul> <li>各リクエスト毎に発行されるID</li> </ul> </li> </ul>  <h3 id=\"error_response\">共通エラーレスポンス</h3>  <p>APIリクエストでエラーが発生した場合は、エラー原因に応じたステータスコードおよびメッセージを返します。</p>    <table border=\"1\">   <tbody>     <tr>       <th style=\"padding: 10px\"><strong>ステータスコード</strong></th>       <th style=\"padding: 10px\"><strong>原因</strong></th>     </tr>     <tr><td style=\"padding: 10px\">400</td><td style=\"padding: 10px\">リクエストパラメータが不正</td></tr>     <tr><td style=\"padding: 10px\">401</td><td style=\"padding: 10px\">アクセストークンが無効</td></tr>     <tr><td style=\"padding: 10px\">403</td><td style=\"padding: 10px\">アクセス権限がない</td></tr>     <tr><td style=\"padding: 10px\">404</td><td style=\"padding: 10px\">リソースが存在しない</td></tr>     <tr><td style=\"padding: 10px\">429</td><td style=\"padding: 10px\">リクエスト回数制限を超えた</td></tr>     <tr><td style=\"padding: 10px\">503</td><td style=\"padding: 10px\">システム内で予期しないエラーが発生</td></tr>   </tbody> </table>  <p>メッセージボディ内の <code>messages</code> にはエラー内容を説明する文字列が入ります。</p> <pre><code>  {     &quot;status_code&quot; : 400,     &quot;errors&quot; : [       {         &quot;type&quot; : &quot;bad_request&quot;,         &quot;messages&quot; : [           &quot;リクエストの形式が不正です。&quot;         ]       }     ]   }  </code></pre>  </br>  <h3 id=\"api_rate_limit\">API使用制限</h3>  <p>APIリクエストは1時間で5000回を上限としています。API使用ステータスはレスポンスヘッダに付与されます。</p> <pre><code>X-Ratelimit-Limit:5000 X-Ratelimit-Remaining:4998 X-Ratelimit-Reset:2018-01-01T12:00:00.000000Z </code></pre>  <br> 各ヘッダの意味は次のとおりです。</p>   <table border=\"1\">   <tbody>     <tr>       <th style=\"padding: 10px\"><strong>ヘッダ名</strong></th>       <th style=\"padding: 10px\"><strong>説明</strong></th>     </tr>     <tr><td style=\"padding: 10px\">X-RateLimit-Limit</td><td style=\"padding: 10px\">使用回数の上限</td></tr>     <tr><td style=\"padding: 10px\">X-RateLimit-Remaining</td><td style=\"padding: 10px\">残り使用回数</td></tr>     <tr><td style=\"padding: 10px\">X-RateLimit-Reset</td><td style=\"padding: 10px\">使用回数がリセットされる時刻</td></tr>   </tbody> </table>  <p>上記に加え、freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。<br> その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>
 *
 * The version of the OpenAPI document: 2022-02-01
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ApiV1EmployeeCreateRequestSerializer {
    /// 従業員番号<br> 従業員を判別しやすいよう管理することができます。（例: 1人目の正社員を A-001 と入力）
    #[serde(rename = "num", skip_serializing_if = "Option::is_none")]
    pub num: Option<String>,
    /// <a href=\"https://support.freee.co.jp/hc/ja/articles/360000562403-労働時間制度と勤務-賃金設定について\" target=\"_blank\">勤務・賃金設定名</a> で設定した名称を指定してください。 - 未指定の際は、最初に登録したデータが利用されます。 - 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。
    #[serde(rename = "working_hours_system_name", skip_serializing_if = "Option::is_none")]
    pub working_hours_system_name: Option<String>,
    /// <a href=\"https://support.freee.co.jp/hc/ja/articles/360000666303-締め日支払い日を変更する方法は-\" target=\"_blank\">締め日支払い日グループ名</a> で設定した締め日支払い日を指定してください。 - 未指定の際は、最初に登録したデータが利用されます。 - 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。
    #[serde(rename = "company_reference_date_rule_name", skip_serializing_if = "Option::is_none")]
    pub company_reference_date_rule_name: Option<String>,
    /// 姓（必須）<br> last_nameとfirst_nameを空白文字で結合した文字列がdisplay_nameとして登録されます。 - 例）last_name=田中、first_name＝太郎の場合、display_name＝田中 太郎 - display_nameはput apiで更新可能です。
    #[serde(rename = "last_name")]
    pub last_name: String,
    /// 名（必須）<br> last_nameとfirst_nameを空白文字で結合した文字列がdisplay_nameとして登録されます。 - 例）last_name=田中、first_name＝太郎の場合、display_name＝田中 太郎 - display_nameはput apiで更新可能です。
    #[serde(rename = "first_name")]
    pub first_name: String,
    /// 姓カナ（必須）
    #[serde(rename = "last_name_kana")]
    pub last_name_kana: String,
    /// 名カナ（必須）
    #[serde(rename = "first_name_kana")]
    pub first_name_kana: String,
    /// 生年月日（必須）
    #[serde(rename = "birth_date")]
    pub birth_date: String,
    /// 入社日（必須）
    #[serde(rename = "entry_date")]
    pub entry_date: String,
    /// 給与方式 monthly: 月給, daily: 日給, hourly: 時給 - フレックスタイム制を使用している場合はmonthly以外指定できません。 - 入力パラメータのno_payroll_calculationがfalseの場合は必須になります。 - 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。
    #[serde(rename = "pay_calc_type", skip_serializing_if = "Option::is_none")]
    pub pay_calc_type: Option<PayCalcType>,
    /// 基本給 - 入力パラメータのno_payroll_calculationがfalseの場合は必須になります。 - 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。
    #[serde(rename = "pay_amount", skip_serializing_if = "Option::is_none")]
    pub pay_amount: Option<i32>,
    /// 性別　unselected: 未選択, male: 男性, female: 女性（デフォルト: unselected: 未選択）
    #[serde(rename = "gender", skip_serializing_if = "Option::is_none")]
    pub gender: Option<Gender>,
    /// 配偶者の有無（デフォルト: false）
    #[serde(rename = "married", skip_serializing_if = "Option::is_none")]
    pub married: Option<bool>,
    /// 給与計算対象外の従業員情報を作成する場合はtrueを指定します
    #[serde(rename = "no_payroll_calculation", skip_serializing_if = "Option::is_none")]
    pub no_payroll_calculation: Option<bool>,
}

impl ApiV1EmployeeCreateRequestSerializer {
    pub fn new(last_name: String, first_name: String, last_name_kana: String, first_name_kana: String, birth_date: String, entry_date: String) -> ApiV1EmployeeCreateRequestSerializer {
        ApiV1EmployeeCreateRequestSerializer {
            num: None,
            working_hours_system_name: None,
            company_reference_date_rule_name: None,
            last_name,
            first_name,
            last_name_kana,
            first_name_kana,
            birth_date,
            entry_date,
            pay_calc_type: None,
            pay_amount: None,
            gender: None,
            married: None,
            no_payroll_calculation: None,
        }
    }
}

/// 給与方式 monthly: 月給, daily: 日給, hourly: 時給 - フレックスタイム制を使用している場合はmonthly以外指定できません。 - 入力パラメータのno_payroll_calculationがfalseの場合は必須になります。 - 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PayCalcType {
    #[serde(rename = "monthly")]
    Monthly,
    #[serde(rename = "daily")]
    Daily,
    #[serde(rename = "hourly")]
    Hourly,
}

impl Default for PayCalcType {
    fn default() -> PayCalcType {
        Self::Monthly
    }
}
/// 性別　unselected: 未選択, male: 男性, female: 女性（デフォルト: unselected: 未選択）
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Gender {
    #[serde(rename = "unselected")]
    Unselected,
    #[serde(rename = "male")]
    Male,
    #[serde(rename = "female")]
    Female,
}

impl Default for Gender {
    fn default() -> Gender {
        Self::Unselected
    }
}

